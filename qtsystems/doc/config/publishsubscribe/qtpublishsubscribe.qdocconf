include($QT_INSTALL_DOCS/global/qt-html-templates-offline.qdocconf)
include($QT_INSTALL_DOCS/global/qt-module-defaults.qdocconf)

include(macros.qdocconf)
include(qt-cpp-ignore.qdocconf)
include(qt-defines.qdocconf)

# Name of the project.
project = Qt PublishSubscribe
description = Qt PublishSubscribe Documentation

# Directories in which to search for files to document and images.
# By default set to the root directory of the project for sources
# and headers and qdoc will therefore generate output for each file.
# Images should be placed in <rootdir>/dic/images and examples in
# <rootdir>/examples.
# Paths are relative to the  location of this file.

exampledirs += ../../src/publishsubscribe/examples \
               ../../.. \
               ../../../examples/publishsubscribe \
               ../../src/publishsubscribe

headerdirs += ../../src/publishsubscribe \
              ../../../src/publishsubscribe \
              ../../../src/imports/publishsubscribe \
              ../../../../qtdeclarative/src

imagedirs += ./images \
             ../../src/publishsubscribe/images

sourcedirs += ../../src/publishsubscribe \
              ../../../src/publishsubscribe \
              ../../../examples/publishsubscribe \
              ../../../src/imports/publishsubscribe \
              ../../../qtdeclarative/src

excludedirs +=

# The index file contains links to the Qt 5 documentation.
# Point to the any .index file to cross link to other projects
#indexes = $QT5DOC/doc/html/qt.index

# The following parameters are for creating a qhp file, the qhelpgenerator
# program can convert the qhp file into a qch file which can be opened in
# Qt Assistant and/or Qt Creator.

# Defines the name of the project. You cannot use operators (+, =, -) in
# the name. Properties for this project are set using a qhp.<projectname>.property
# format.
qhp.projects = qtpublishsubscribe

# Sets the name of the output qhp file.
qhp.qtpublishsubscribe.file = qtpublishsubscribe.qhp

# Namespace for the output file. This namespace is used to distinguish between
# different documentation files in Creator/Assistant.
qhp.qtpublishsubscribe.namespace = qtpublishsubscribe.500

# Title for the package, will be the main title for the package in
# Assistant/Creator.
qhp.qtpublishsubscribe.indexTitle = Qt PublishSubscribe Documentation

# Extra files to add to the output which are not linked to from anywhere
# using a qdoc \l command.
qhp.qtpublishsubscribe.extraFiles = style/common.css

# Only update the name of the project for the next variables.
qhp.qtpublishsubscribe.virtualFolder  = qdoc
qhp.qtpublishsubscribe.subprojects = classes
qhp.qtpublishsubscribe.subprojects.classes.title = Classes
qhp.qtpublishsubscribe.subprojects.classes.selectors = class fake:headerfile
qhp.qtpublishsubscribe.subprojects.classes.sortPages = true



# Do NOT change the variables after this line unless you know what you are doing.

outputformats = HTML

examples.fileextensions = "*.cpp *.h *.js *.svg *.xml *.ui *.qml"
examples.imageextensions = "*.png *.jpeg *.jpg *.gif *.mng"
headers.fileextensions = "*.h *.ch *.h++ *.hh *.hpp *.hxx"
sources.fileextensions = "*.cpp *.qdoc *.mm *.qml"

HTML.nobreadcrumbs = "true"

HTML.templatedir = .
HTML.stylesheets = style/common.css

HTML.headerstyles = "  <link rel=\"stylesheet\" type=\"text/css\" href=\"style/common.css\" />\n"
HTML.endheader = "</head>\n<body>\n"

HTML.footer = "<div class=\"footer\">Copyright (c) 2012 Digia Plc and/or its subsidiaries. All rights reserved.</div>\n"
