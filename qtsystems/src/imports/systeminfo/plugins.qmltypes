import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -notrelocatable QtSystemInfo 5.0'

Module {
    Component {
        name: "QBatteryInfo"
        prototype: "QObject"
        exports: ["QtSystemInfo/BatteryInfo 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ChargerType"
            values: {
                "UnknownCharger": 0,
                "WallCharger": 1,
                "USBCharger": 2,
                "VariableCurrentCharger": 3
            }
        }
        Enum {
            name: "ChargingState"
            values: {
                "UnknownChargingState": 0,
                "Charging": 1,
                "IdleChargingState": 2,
                "Discharging": 3
            }
        }
        Enum {
            name: "LevelStatus"
            values: {
                "LevelUnknown": 0,
                "LevelEmpty": 1,
                "LevelLow": 2,
                "LevelOk": 3,
                "LevelFull": 4
            }
        }
        Enum {
            name: "Health"
            values: {
                "HealthUnknown": 0,
                "HealthOk": 1,
                "HealthBad": 2
            }
        }
        Property { name: "batteryCount"; type: "int"; isReadonly: true }
        Property { name: "batteryIndex"; type: "int" }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "level"; type: "int"; isReadonly: true }
        Property { name: "currentFlow"; type: "int"; isReadonly: true }
        Property { name: "cycleCount"; type: "int"; isReadonly: true }
        Property { name: "maximumCapacity"; type: "int"; isReadonly: true }
        Property { name: "remainingCapacity"; type: "int"; isReadonly: true }
        Property { name: "remainingChargingTime"; type: "int"; isReadonly: true }
        Property { name: "voltage"; type: "int"; isReadonly: true }
        Property { name: "chargingState"; type: "ChargingState"; isReadonly: true }
        Property { name: "chargerType"; type: "ChargerType"; isReadonly: true }
        Property { name: "levelStatus"; type: "LevelStatus"; isReadonly: true }
        Property { name: "health"; type: "Health"; isReadonly: true }
        Property { name: "temperature"; type: "float"; isReadonly: true }
        Signal {
            name: "batteryIndexChanged"
            Parameter { name: "batteryIndex"; type: "int" }
        }
        Signal {
            name: "validChanged"
            Parameter { name: "isValid"; type: "bool" }
        }
        Signal {
            name: "batteryCountChanged"
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "chargerTypeChanged"
            Parameter { name: "type"; type: "QBatteryInfo::ChargerType" }
        }
        Signal {
            name: "chargingStateChanged"
            Parameter { name: "state"; type: "QBatteryInfo::ChargingState" }
        }
        Signal {
            name: "levelChanged"
            Parameter { name: "level"; type: "int" }
        }
        Signal {
            name: "currentFlowChanged"
            Parameter { name: "flow"; type: "int" }
        }
        Signal {
            name: "cycleCountChanged"
            Parameter { name: "cycleCount"; type: "int" }
        }
        Signal {
            name: "remainingCapacityChanged"
            Parameter { name: "capacity"; type: "int" }
        }
        Signal {
            name: "remainingChargingTimeChanged"
            Parameter { name: "seconds"; type: "int" }
        }
        Signal {
            name: "voltageChanged"
            Parameter { name: "voltage"; type: "int" }
        }
        Signal {
            name: "levelStatusChanged"
            Parameter { name: "levelStatus"; type: "QBatteryInfo::LevelStatus" }
        }
        Signal {
            name: "healthChanged"
            Parameter { name: "health"; type: "QBatteryInfo::Health" }
        }
        Signal {
            name: "temperatureChanged"
            Parameter { name: "temperature"; type: "float" }
        }
    }
    Component {
        name: "QDeclarativeDeviceInfo"
        prototype: "QObject"
        exports: ["QtSystemInfo/DeviceInfo 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Feature"
            values: {
                "BluetoothFeature": 0,
                "CameraFeature": 1,
                "FmRadioFeature": 2,
                "FmTransmitterFeature": 3,
                "InfraredFeature": 4,
                "LedFeature": 5,
                "MemoryCardFeature": 6,
                "UsbFeature": 7,
                "VibrationFeature": 8,
                "WlanFeature": 9,
                "SimFeature": 10,
                "PositioningFeature": 11,
                "VideoOutFeature": 12,
                "HapticsFeature": 13,
                "NfcFeature": 14
            }
        }
        Enum {
            name: "LockType"
            values: {
                "NoLock": 0,
                "PinLock": 1,
                "TouchOrKeyboardLock": 2,
                "UnknownLock": 4
            }
        }
        Enum {
            name: "LockTypeFlags"
            values: {
                "NoLock": 0,
                "PinLock": 1,
                "TouchOrKeyboardLock": 2,
                "UnknownLock": 4
            }
        }
        Enum {
            name: "ThermalState"
            values: {
                "UnknownThermal": 0,
                "NormalThermal": 1,
                "WarningThermal": 2,
                "AlertThermal": 3,
                "ErrorThermal": 4
            }
        }
        Enum {
            name: "Version"
            values: {
                "Os": 0,
                "Firmware": 1
            }
        }
        Property { name: "monitorThermalState"; type: "bool" }
        Property { name: "activatedLocks"; type: "LockTypeFlags"; isReadonly: true }
        Property { name: "enabledLocks"; type: "LockTypeFlags"; isReadonly: true }
        Property { name: "thermalState"; type: "ThermalState"; isReadonly: true }
        Method {
            name: "hasFeature"
            type: "bool"
            Parameter { name: "feature"; type: "Feature" }
        }
        Method { name: "imeiCount"; type: "int" }
        Method {
            name: "imei"
            type: "string"
            Parameter { name: "interface"; type: "int" }
        }
        Method { name: "manufacturer"; type: "string" }
        Method { name: "model"; type: "string" }
        Method { name: "productName"; type: "string" }
        Method { name: "uniqueDeviceID"; type: "string" }
        Method {
            name: "version"
            type: "string"
            Parameter { name: "type"; type: "Version" }
        }
    }
    Component {
        name: "QDeclarativeNetworkInfo"
        prototype: "QObject"
        exports: ["QtSystemInfo/NetworkInfo 5.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "CellDataTechnology"
            values: {
                "UnknownDataTechnology": 0,
                "GprsDataTechnology": 1,
                "EdgeDataTechnology": 2,
                "UmtsDataTechnology": 3,
                "HspaDataTechnology": 4
            }
        }
        Enum {
            name: "NetworkMode"
            values: {
                "UnknownMode": 0,
                "GsmMode": 1,
                "CdmaMode": 2,
                "WcdmaMode": 3,
                "WlanMode": 4,
                "EthernetMode": 5,
                "BluetoothMode": 6,
                "WimaxMode": 7,
                "LteMode": 8,
                "TdscdmaMode": 9
            }
        }
        Enum {
            name: "NetworkStatus"
            values: {
                "UnknownStatus": 0,
                "NoNetworkAvailable": 1,
                "EmergencyOnly": 2,
                "Searching": 3,
                "Busy": 4,
                "Denied": 5,
                "HomeNetwork": 6,
                "Roaming": 7
            }
        }
        Property { name: "monitorNetworkSignalStrength"; type: "bool" }
        Property { name: "monitorNetworkStatus"; type: "bool" }
        Property { name: "monitorNetworkName"; type: "bool" }
        Property { name: "monitorCurrentNetworkMode"; type: "bool" }
        Property { name: "currentNetworkMode"; type: "NetworkMode"; isReadonly: true }
        Property { name: "monitorNetworkInterfaceCount"; type: "bool" }
        Property { name: "monitorCurrentCellDataTechnology"; type: "bool" }
        Property { name: "monitorCellId"; type: "bool" }
        Property { name: "monitorCurrentMobileCountryCode"; type: "bool" }
        Property { name: "monitorCurrentMobileNetworkCode"; type: "bool" }
        Property { name: "monitorLocationAreaCode"; type: "bool" }
        Signal {
            name: "cellIdChanged"
            Parameter { name: "interfaceIndex"; type: "int" }
            Parameter { name: "id"; type: "string" }
        }
        Signal {
            name: "currentCellDataTechnologyChanged"
            Parameter { name: "interfaceIndex"; type: "int" }
            Parameter { name: "tech"; type: "int" }
        }
        Signal {
            name: "currentMobileCountryCodeChanged"
            Parameter { name: "interfaceIndex"; type: "int" }
            Parameter { name: "mcc"; type: "string" }
        }
        Signal {
            name: "currentMobileNetworkCodeChanged"
            Parameter { name: "interfaceIndex"; type: "int" }
            Parameter { name: "mnc"; type: "string" }
        }
        Signal {
            name: "locationAreaCodeChanged"
            Parameter { name: "interfaceIndex"; type: "int" }
            Parameter { name: "lac"; type: "string" }
        }
        Signal {
            name: "networkInterfaceCountChanged"
            Parameter { name: "mode"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "networkNameChanged"
            Parameter { name: "mode"; type: "int" }
            Parameter { name: "interfaceIndex"; type: "int" }
            Parameter { name: "name"; type: "string" }
        }
        Signal {
            name: "networkSignalStrengthChanged"
            Parameter { name: "mode"; type: "int" }
            Parameter { name: "interfaceIndex"; type: "int" }
            Parameter { name: "strength"; type: "int" }
        }
        Signal {
            name: "networkStatusChanged"
            Parameter { name: "mode"; type: "int" }
            Parameter { name: "interfaceIndex"; type: "int" }
            Parameter { name: "status"; type: "int" }
        }
        Method {
            name: "networkSignalStrength"
            type: "int"
            Parameter { name: "mode"; type: "NetworkMode" }
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "networkInterfaceCount"
            type: "int"
            Parameter { name: "mode"; type: "NetworkMode" }
        }
        Method {
            name: "currentCellDataTechnology"
            type: "int"
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "networkStatus"
            type: "int"
            Parameter { name: "mode"; type: "NetworkMode" }
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "cellId"
            type: "string"
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "currentMobileCountryCode"
            type: "string"
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "currentMobileNetworkCode"
            type: "string"
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "locationAreaCode"
            type: "string"
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "networkName"
            type: "string"
            Parameter { name: "mode"; type: "NetworkMode" }
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "homeMobileCountryCode"
            type: "string"
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "homeMobileNetworkCode"
            type: "string"
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "imsi"
            type: "string"
            Parameter { name: "interface"; type: "int" }
        }
        Method {
            name: "macAddress"
            type: "string"
            Parameter { name: "mode"; type: "NetworkMode" }
            Parameter { name: "interface"; type: "int" }
        }
    }
    Component {
        name: "QScreenSaver"
        prototype: "QObject"
        exports: ["QtSystemInfo/ScreenSaver 5.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "screenSaverEnabled"; type: "bool" }
    }
}
