/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt PIM Module.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \module QtContacts
    \title Qt Contacts C++ Classes
    \ingroup modules

    \brief The QtContacts module contains classes for management.

    The \l{Qt Contacts} C++ classes provide contact management. A contact is the
    digital representation of a person, group, or entity that is stored in a
    platform-specific manner.

    To include the definitions of the module's classes, use the following
    directive:

    \snippet doc_src_qtcontacts.cpp include

    To use the C++ library in your application, add the following configuration
    option to your \c .pro file:

    \snippet doc_src_qtcontacts.pro contacts project modification
*/

/*!
    \qmlmodule QtContacts 5.0
    \title Qt Contacts QML Types
    \ingroup qmlmodules
    \brief Provides QML types for handling personal contacts and information

    \l{Qt Contacts}' QML API enables client to search for contacts data from
    local backends and use filters to get only the relevant results. The QML
    Contacts API delivers this capability in easy to use form. The \l{Qt
    Contacts QML API} page contains an overview of the QML types.

    To use the types, simply add the following to the QML file:

     \snippet moduleimports.qml Contacts import

*/
